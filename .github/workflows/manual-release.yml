name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.1)'
        required: true
        type: string
      release_notes:
        description: 'Custom release notes (optional)'
        required: false
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  manual-release:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate version format
      run: |
        VERSION="${{ github.event.inputs.version }}"
        if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "❌ Invalid version format. Use semantic versioning (e.g., 1.0.1)"
          exit 1
        fi
        echo "✅ Version format valid: $VERSION"
        
    - name: Check if tag exists
      run: |
        VERSION="${{ github.event.inputs.version }}"
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "❌ Tag v$VERSION already exists!"
          exit 1
        fi
        echo "✅ Tag v$VERSION is available"
        
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Update version in files
      run: |
        VERSION="${{ github.event.inputs.version }}"
        echo "📝 Updating version to $VERSION in project files..."
        
        # Update Makefile
        sed -i '' "s/1\.0\.0/$VERSION/g" Makefile
        
        # Update README if needed
        sed -i '' "s/version '1\.0\.0'/version '$VERSION'/g" README.md || true
        
    - name: Install dependencies
      run: |
        brew install blueutil || true
        
    - name: Run tests
      run: |
        echo "🧪 Running test suite..."
        swift test
        
    - name: Build and package
      run: |
        echo "🔨 Building release..."
        swift build -c release
        
        echo "📦 Packaging app..."
        make package
        
    - name: Create DMG
      run: |
        echo "💿 Creating DMG..."
        mkdir -p dmg-contents
        cp -r AirPodsMonitor.app dmg-contents/
        ln -s /Applications dmg-contents/Applications
        
        hdiutil create -volname "AirPods Monitor" \
          -srcfolder dmg-contents \
          -ov -format UDZO \
          AirPodsMonitor.dmg
          
    - name: Generate checksums and cask
      run: |
        VERSION="${{ github.event.inputs.version }}"
        
        echo "🔐 Generating checksums..."
        shasum -a 256 AirPodsMonitor.dmg > AirPodsMonitor.dmg.sha256
        SHA256=$(cat AirPodsMonitor.dmg.sha256 | cut -d' ' -f1)
        
        echo "🍺 Generating Homebrew Cask..."
        cat > airpods-monitor.rb << EOF
        cask "airpods-monitor" do
          version "$VERSION"
          sha256 "$SHA256"
        
          url "https://github.com/${{ github.repository }}/releases/download/v$VERSION/AirPodsMonitor.dmg"
          name "AirPods Monitor"
          desc "Real-time AirPods audio profile monitor for macOS menu bar"
          homepage "https://github.com/${{ github.repository }}"
        
          depends_on macos: ">= :catalina"
        
          app "AirPodsMonitor.app"
        
          zap trash: [
            "~/Library/Preferences/com.airpods.monitor.plist",
          ]
        end
        EOF
        
    - name: Create release notes
      run: |
        VERSION="${{ github.event.inputs.version }}"
        CUSTOM_NOTES="${{ github.event.inputs.release_notes }}"
        
        cat > release-notes.md << EOF
        # 🎧 AirPods Monitor v$VERSION
        
        EOF
        
        if [[ -n "$CUSTOM_NOTES" ]]; then
          echo "$CUSTOM_NOTES" >> release-notes.md
          echo "" >> release-notes.md
        fi
        
        cat >> release-notes.md << EOF
        ## 📥 Installation Options
        
        ### 🎯 Direct Download (Recommended)
        1. Download \`AirPodsMonitor.dmg\` below
        2. Open DMG and drag to Applications folder
        3. Launch and enjoy!
        
        ### 🍺 Homebrew (Copy the cask file)
        \`\`\`ruby
        # Save the airpods-monitor.rb file and install with:
        brew install --cask ./airpods-monitor.rb
        \`\`\`
        
        ## ✅ Requirements
        - **macOS**: 10.15 (Catalina) or later
        - **Hardware**: Any Mac with Bluetooth
        - **Headphones**: AirPods, Beats, or compatible Bluetooth audio devices
        
        ## 🔐 Verification
        - **DMG SHA256**: \`$(cat AirPodsMonitor.dmg.sha256 | cut -d' ' -f1)\`
        
        ## 🐛 Issues?
        - Check the [Troubleshooting Guide](https://github.com/${{ github.repository }}#troubleshooting)
        - [Report bugs](https://github.com/${{ github.repository }}/issues/new)
        
        ---
        **💡 Pro tip**: Enable "Launch at Login" in preferences for seamless monitoring!
        EOF
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: "🎧 AirPods Monitor v${{ github.event.inputs.version }}"
        body_path: release-notes.md
        files: |
          AirPodsMonitor.dmg
          AirPodsMonitor.dmg.sha256
          airpods-monitor.rb
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Success notification
      run: |
        VERSION="${{ github.event.inputs.version }}"
        echo "🎉 Successfully created release v$VERSION!"
        echo "📍 Release URL: https://github.com/${{ github.repository }}/releases/tag/v$VERSION"